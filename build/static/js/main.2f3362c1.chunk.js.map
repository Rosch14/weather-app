{"version":3,"sources":["responsive/Device.jsx","components/search-city/search-city.styles.jsx","components/search-city/search-city.component.jsx","components/small-label.styles.jsx","components/text.styles.jsx","components/forecast-hour/forecast-hour.styles.jsx","components/forecast-hour/forecast-hour.component.jsx","components/big-label.styles.jsx","components/medium-label.styles.jsx","components/result-fade-in.styles.jsx","components/results/results.styles.jsx","components/results/results.component.jsx","components/not-found/not-found.styles.jsx","components/not-found/not-found.component.jsx","App.styles.jsx","App.js","serviceWorker.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SearchBar","styled","form","showResult","SearchInput","input","SearchIcon","span","SearchCity","submit","value","change","onSubmit","type","placeholder","onChange","icon","faSearch","SmallLabel","h4","color","weight","fontSize","align","firstToUpperCase","Text","ForecastWrapper","div","WeatherIcon","img","ForecastHour","props","temp","month","day","hour","iconUrl","src","BigLabel","h2","MediumLabel","h3","ResultFadeIn","keyframes","Results","LocationWrapper","CurrentWeatherWrapper","TemperatureWrapper","Temperature","WeatherDetailsWrapper","WeatherDetail","Forecast","Result","weather","city","country","date","description","main","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","forecasts","forecast","map","item","key","dt","Math","floor","dt_txt","slice","weatherIcon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","NotFoundWrapper","NotFoundIcon","NotFoundText","NotFound","faBroom","AppTitle","h1","showLabel","secondary","WeatherWrapper","App","state","weatherInfo","error","handleInputChange","e","setState","target","handleSearchCity","preventDefault","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","currentDate","Date","getDay","getDate","getMonth","sys","toLocaleTimeString","name","temp_max","temp_min","clouds","speed","list","catch","console","log","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2f3362c1.chunk.js","sourcesContent":["const size = {\r\n    mobileS: '320px',\r\n    mobileM: '375px',\r\n    mobileL: '525px',\r\n    tablet: '768px',\r\n    laptop: '1024px',\r\n    laptopL: '1440px',\r\n    desktop: '2560px',\r\n};\r\n\r\nconst device = {\r\n    mobileS: `(min-width: ${size.mobileS})`,\r\n    mobileM: `(min-width: ${size.mobileM})`,\r\n    mobileL: `(min-width: ${size.mobileL})`,\r\n    tablet: `(min-width: ${size.tablet})`,\r\n    laptop: `(min-width: ${size.laptop})`,\r\n    laptopL: `(min-width: ${size.laptopL})`,\r\n    desktop: `(min-width: ${size.desktop})`,\r\n    desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n\r\nexport default device;","import styled from 'styled-components';\r\nimport device from '../../responsive/Device';\r\n\r\nexport const SearchBar = styled.form`\r\n    top: ${({ showResult }) => (showResult ? '0%' : '30%')};\r\n    position: relative;\r\n    margin: 0 auto;\r\n    max-width: 500px;\r\n    transition: 0.8s 0.5s;\r\n    @media ${device.laptopL} {\r\n        max-width: 600px;\r\n    }\r\n    @media ${device.desktop} {\r\n        max-width: 700px;\r\n    }\r\n`;\r\n\r\nexport const SearchInput = styled.input`\r\n    width: 100%;\r\n    border: none;\r\n    background-color: #ffffff;\r\n    font-size: 16px;\r\n    padding: 10px 15px 10px 40px;\r\n    color: #c5c5c5;\r\n    transition: 0.2s;\r\n    border-radius: 20px;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    &:focus {\r\n        color: #191919;\r\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n        outline: none;\r\n    }\r\n    @media ${device.tablet} {\r\n        font-size: 18px;\r\n    }\r\n    @media ${device.laptop} {\r\n        padding: 15px 20px 15px 45px;\r\n        border-radius: 30px;\r\n    } \r\n`;\r\n\r\nexport const SearchIcon = styled.span`\r\n    display: block;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 22px;\r\n    transform: translate(-50%, -50%);\r\n    height: 14px;\r\n    width: 14px;\r\n    font-size: 14px;\r\n    color: #c5c5c5;\r\n    @media ${device.tablet} {\r\n        height: 15px;\r\n        width: 15px;\r\n        font-size: 15px;\r\n    }\r\n    @media ${device.laptop} {\r\n        height: 16px;\r\n        width: 16px;\r\n        font-size: 16px;\r\n    } \r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    SearchBar,\r\n    SearchInput,\r\n    SearchIcon\r\n} from './search-city.styles.jsx';\r\n\r\nconst SearchCity = ({ submit, value, change, showResult }) => {\r\n    return (\r\n        <>\r\n            <SearchBar showResult={showResult} onSubmit={submit}>\r\n                <SearchInput type=\"text\" value={value} placeholder=\"Enter city\" onChange={change}/>\r\n                <SearchIcon>\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                </SearchIcon>\r\n            </SearchBar>\r\n        </>\r\n    );\r\n};\r\n\r\nSearchCity.propTypes = {\r\n    submit: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    change: PropTypes.func.isRequired,\r\n    showResult: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SearchCity;","import styled from 'styled-components';\r\nimport device from '../responsive/Device';\r\n\r\nconst SmallLabel = styled.h4`\r\n    color: ${({ color }) => color || '#FFFFFF'};\r\n    display: block;\r\n    font-weight: ${({ weight }) => weight || '600'};\r\n    font-size: ${({ fontSize }) => fontSize || '15px'};\r\n    text-align: ${({ align }) => align || 'left'};\r\n    padding: 5px 0;\r\n    ${({ firstToUpperCase }) =>\r\n        firstToUpperCase &&\r\n        `\r\n        &:first-letter {\r\n            text-transform: uppercase;\r\n        }\r\n        `}\r\n        @media ${device.tablet} {\r\n            font-size: ${({ fontSize }) => fontSize || '20px'};\r\n        }\r\n        @media ${device.laptop} {\r\n            font-size: ${({ fontSize }) => fontSize || '23px'};\r\n        }\r\n        @media ${device.laptopL} {\r\n            font-size: ${({ fontSize }) => fontSize || '26px'};\r\n        } \r\n`;\r\n\r\nexport default SmallLabel;","import styled from 'styled-components';\r\nimport device from '../responsive/Device';\r\n\r\nconst Text = styled.span`\r\n    color: ${({ color }) => color || '#FFFFFF'};\r\n    display: block;\r\n    font-size: ${({ fontSize }) => fontSize || '12px'};\r\n    text-align: ${({ align }) => align || 'left'};\r\n    \r\n    ${({ firstToUpperCase }) =>\r\n        firstToUpperCase &&\r\n        `\r\n        &:first-letter {\r\n            text-transform: uppercase;\r\n        }\r\n    `}\r\n    @media ${device.tablet} {\r\n        font-size: ${({ fontSize }) => fontSize || '15px'};\r\n    }\r\n    @media ${device.laptop} {\r\n        font-size: ${({ fontSize }) => fontSize || '17px'};  \r\n    }\r\n    @media ${device.laptopL} {\r\n        font-size: ${({ fontSize }) => fontSize || '19px'};\r\n    }\r\n`;\r\n\r\nexport default Text;","import styled from 'styled-components';\r\nimport device from '../../responsive/Device';\r\n\r\nexport const ForecastWrapper = styled.div`\r\n    flex-shrink: 0;\r\n    flex-basis: 90px;\r\n    padding: 10px;\r\n    margin: 0 5px;\r\n    border-radius: 5px;\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    &:first-child {\r\n        margin-left: 0;    \r\n    }\r\n    &:last-child {\r\n        margin-right: 0;\r\n    }\r\n    @media ${device.tablet} {\r\n        flex-basis: 110px;\r\n    }\r\n    @media ${device.laptop} {\r\n        flex-basis: 125px;\r\n    }\r\n    @media ${device.laptopL} {\r\n        flex-basis: 140px;\r\n    }\r\n`;\r\n\r\nexport const WeatherIcon = styled.img`\r\n    display: block;\r\n    height: 50px;\r\n    width: 50px;\r\n    margin: 0 auto;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SmallLabel from '../small-label.styles.jsx';\r\nimport Text from '../text.styles.jsx';\r\nimport {\r\n    ForecastWrapper,\r\n    WeatherIcon\r\n} from './forecast-hour.styles';\r\n\r\nconst ForecastHour = props => {\r\n    const { temp, month, day, hour, icon } = props;\r\n    const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\r\n\r\n    return (\r\n        <ForecastWrapper>\r\n            <Text align=\"center\">\r\n                {month}.{day}\r\n            </Text>\r\n            <Text align=\"center\">{hour}:00</Text>\r\n            <WeatherIcon src={iconUrl}  />\r\n            <SmallLabel align=\"center\" weight=\"400\">\r\n                {temp}&#176;\r\n            </SmallLabel>\r\n        </ForecastWrapper>\r\n    );\r\n};\r\n\r\nForecastHour.propTypes = {\r\n    temp: PropTypes.number.isRequired,\r\n    month: PropTypes.string.isRequired,\r\n    day: PropTypes.string.isRequired,\r\n    hour: PropTypes.number.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ForecastHour;","import styled from 'styled-components';\r\nimport device from '../responsive/Device';\r\n\r\nconst BigLabel = styled.h2`\r\n    color: ${({ color }) => color || '#FFFFFF'};\r\n    display: block;\r\n    font-weight: ${({ weight }) => weight || '600'};\r\n    font-size: ${({ fontSize }) => fontSize || '30px'};\r\n    text-align: ${({ align }) => align || 'left'};\r\n    padding: 5px 0;\r\n    ${({ firstToUpperCase }) =>\r\n        firstToUpperCase &&\r\n        `\r\n        &:first-letter {\r\n            text-transform: uppercase;\r\n        }\r\n        `}\r\n        @media ${device.tablet} {\r\n            font-size: ${({ fontSize }) => fontSize || '37px'};\r\n        }\r\n        @media ${device.laptop} {\r\n            font-size: ${({ fontSize }) => fontSize || '43px'};\r\n        }\r\n        @media ${device.laptopL} {\r\n            font-size: ${({ fontSize }) => fontSize || '52px'};\r\n        } \r\n`;\r\n\r\nexport default BigLabel;","import styled from 'styled-components';\r\nimport device from '../responsive/Device';\r\n\r\nconst MediumLabel = styled.h3`\r\n    color: ${({ color }) => color || '#FFFFFF'};\r\n    display: block;\r\n    font-weight: ${({ weight }) => weight || '600'};\r\n    font-size: ${({ fontSize }) => fontSize || '20px'};\r\n    text-align: ${({ align }) => align || 'left'};\r\n    padding: 5px 0;\r\n    ${({ firstToUpperCase }) =>\r\n        firstToUpperCase &&\r\n        `\r\n        &:first-letter {\r\n            text-transform: uppercase;\r\n        }\r\n        `}\r\n        @media ${device.tablet} {\r\n            font-size: ${({ fontSize }) => fontSize || '23px'};\r\n        }\r\n        @media ${device.laptop} {\r\n            font-size: ${({ fontSize }) => fontSize || '26px'};\r\n        }\r\n        @media ${device.laptopL} {\r\n            font-size: ${({ fontSize }) => fontSize || '29px'};\r\n        } \r\n`;\r\n\r\nexport default MediumLabel;","import { keyframes } from 'styled-components';\r\n\r\nconst ResultFadeIn = keyframes`\r\n    to {\r\n        opacity: 1;\r\n        visibility: visible;\r\n        top: 0;\r\n    }\r\n`;\r\n\r\nexport default ResultFadeIn;","import styled from 'styled-components';\r\nimport device from '../../responsive/Device';\r\nimport ResultFadeIn from '../result-fade-in.styles';\r\n\r\nexport const Results = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  padding: 40px 0;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  position: relative;\r\n  top: 20px;\r\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\r\n`;\r\n\r\nexport const LocationWrapper = styled.div`\r\n  flex-basis: 100%;\r\n`;\r\n\r\nexport const CurrentWeatherWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-template-columns: auto 1fr;\r\n  margin: 20px 0;\r\n  grid-gap: 30px;\r\n  @media ${device.mobileL} {\r\n    flex-basis: 50%;\r\n    padding-right: 10px;\r\n  }\r\n  @media ${device.tablet} {\r\n    grid-template-columns: 1fr 1fr;\r\n    padding-right: 20px;\r\n  }\r\n`;\r\n\r\nexport const WeatherIcon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 70px;\r\n  color: #ffffff;\r\n  @media ${device.tablet} {\r\n    font-size: 100px;\r\n    justify-content: flex-end;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 120px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 140px;\r\n  }\r\n`;\r\n\r\nexport const TemperatureWrapper = styled.div``;\r\n\r\nexport const Temperature = styled.h3`\r\n  display: block;\r\n  font-size: 50px;\r\n  font-weight: 400;\r\n  color: #ffffff;\r\n  @media ${device.tablet} {\r\n    font-size: 70px;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 90px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 110px;\r\n  }\r\n`;\r\n\r\nexport const WeatherDetailsWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 10px 0;\r\n  margin: 20px 0;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-radius: 10px;\r\n  align-self: flex-start;\r\n  @media ${device.mobileL} {\r\n    flex-basis: 50%;\r\n  }\r\n`;\r\n\r\nexport const WeatherDetail = styled.div`\r\n  flex-basis: calc(100% / 3);\r\n  padding: 10px;\r\n  @media ${device.laptop} {\r\n    padding: 20px 10px;\r\n  }\r\n`;\r\n\r\nexport const ForecastWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  margin: 20px 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Forecast = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  scrollbar-color: lightgray #ffffff;\r\n  scrollbar-width: thin;\r\n  margin-top: 20px;\r\n  padding-bottom: 20px;\r\n  @media ${device.laptop} {\r\n    order: 4;\r\n  }\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    faCloud,\r\n    faBolt,\r\n    faCloudRain,\r\n    faCloudShowersHeavy,\r\n    faSnowflake,\r\n    faSun,\r\n    faSmog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ForecastHour from '../forecast-hour/forecast-hour.component';\r\nimport BigLabel from '../big-label.styles';\r\nimport MediumLabel from '../medium-label.styles';\r\nimport SmallLabel from '../small-label.styles';\r\nimport Text from '../text.styles';\r\n\r\nimport {\r\n    Results,\r\n    LocationWrapper,\r\n    CurrentWeatherWrapper,\r\n    WeatherIcon,\r\n    TemperatureWrapper,\r\n    Temperature,\r\n    WeatherDetailsWrapper,\r\n    WeatherDetail,\r\n    ForecastWrapper,\r\n    Forecast\r\n} from './results.styles';\r\n\r\nconst Result = ({ weather }) => {\r\n    const {\r\n      city,\r\n      country,\r\n      date,\r\n      description,\r\n      main,\r\n      temp,\r\n      sunset,\r\n      sunrise,\r\n      humidity,\r\n      wind,\r\n      highestTemp,\r\n      lowestTemp,\r\n      forecast,\r\n    } = weather;\r\n  \r\n    const forecasts = forecast.map(item => (\r\n      <ForecastHour\r\n        key={item.dt}\r\n        temp={Math.floor(item.main.temp * 1) / 1}\r\n        icon={item.weather[0].icon}\r\n        month={item.dt_txt.slice(5, 7)}\r\n        day={item.dt_txt.slice(8, 10)}\r\n        hour={item.dt_txt.slice(11, 13) * 1}\r\n      />\r\n    ));\r\n  \r\n    let weatherIcon = null;\r\n  \r\n    if (main === 'Thunderstorm') {\r\n      weatherIcon = <FontAwesomeIcon icon={faBolt} />;\r\n    } else if (main === 'Drizzle') {\r\n      weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\r\n    } else if (main === 'Rain') {\r\n      weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\r\n    } else if (main === 'Snow') {\r\n      weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\r\n    } else if (main === 'Clear') {\r\n      weatherIcon = <FontAwesomeIcon icon={faSun} />;\r\n    } else if (main === 'Clouds') {\r\n      weatherIcon = <FontAwesomeIcon icon={faCloud} />;\r\n    } else {\r\n      weatherIcon = <FontAwesomeIcon icon={faSmog} />;\r\n    }\r\n  \r\n    return (\r\n      <Results>\r\n        <LocationWrapper>\r\n          <BigLabel>\r\n            {city}, {country}\r\n          </BigLabel>\r\n          <SmallLabel weight=\"400\">{date}</SmallLabel>\r\n        </LocationWrapper>\r\n        <CurrentWeatherWrapper>\r\n          <WeatherIcon>{weatherIcon}</WeatherIcon>\r\n          <TemperatureWrapper>\r\n            <Temperature>{Math.floor(temp)}&#176;</Temperature>\r\n            <SmallLabel weight=\"400\" firstToUpperCase>\r\n              {description}\r\n            </SmallLabel>\r\n          </TemperatureWrapper>\r\n        </CurrentWeatherWrapper>\r\n        <WeatherDetailsWrapper>\r\n          <WeatherDetail>\r\n            <SmallLabel align=\"center\" weight=\"400\">\r\n              {Math.floor(highestTemp)}&#176;\r\n            </SmallLabel>\r\n            <Text align=\"center\">Hight</Text>\r\n          </WeatherDetail>\r\n          <WeatherDetail>\r\n            <SmallLabel align=\"center\" weight=\"400\">\r\n              {wind}mph\r\n            </SmallLabel>\r\n            <Text align=\"center\">Wind</Text>\r\n          </WeatherDetail>\r\n          <WeatherDetail>\r\n            <SmallLabel align=\"center\" weight=\"400\">\r\n              {sunrise}\r\n            </SmallLabel>\r\n            <Text align=\"center\">Sunrise</Text>\r\n          </WeatherDetail>\r\n          <WeatherDetail>\r\n            <SmallLabel align=\"center\" weight=\"400\">\r\n              {Math.floor(lowestTemp)}&#176;\r\n            </SmallLabel>\r\n            <Text align=\"center\">Low</Text>\r\n          </WeatherDetail>\r\n          <WeatherDetail>\r\n            <SmallLabel align=\"center\" weight=\"400\">\r\n              {humidity}%\r\n            </SmallLabel>\r\n            <Text align=\"center\">Rain</Text>\r\n          </WeatherDetail>\r\n          <WeatherDetail>\r\n            <SmallLabel align=\"center\" weight=\"400\">\r\n              {sunset}\r\n            </SmallLabel>\r\n            <Text align=\"center\">Sunset</Text>\r\n          </WeatherDetail>\r\n        </WeatherDetailsWrapper>\r\n        <ForecastWrapper>\r\n          <MediumLabel weight=\"400\">Forecast</MediumLabel>\r\n          <Forecast>{forecasts}</Forecast>\r\n        </ForecastWrapper>\r\n      </Results>\r\n    );\r\n  };\r\n  \r\n  Result.propTypes = {\r\n    weather: PropTypes.shape({\r\n      city: PropTypes.string,\r\n      country: PropTypes.string,\r\n      date: PropTypes.string,\r\n      description: PropTypes.string,\r\n      main: PropTypes.string,\r\n      temp: PropTypes.number,\r\n      sunrise: PropTypes.string,\r\n      sunset: PropTypes.string,\r\n      humidity: PropTypes.number,\r\n      wind: PropTypes.number,\r\n      highestTemp: PropTypes.number,\r\n      lowestTemp: PropTypes.number,\r\n      forecast: PropTypes.array,\r\n    }).isRequired,\r\n  };\r\n  \r\n  export default Result;","import styled from 'styled-components';\r\nimport ResultFadeIn from '../result-fade-in.styles.jsx';\r\n\r\nexport const NotFoundWrapper = styled.div`\r\n    max-width: 600px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 100px auto 0;\r\n    padding: 20px;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    top: 20px;\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n    border-raidus: 10px;\r\n    animation: ${ResultFadeIn} 0.5s 1.4s forwards;    \r\n`;\r\n\r\nexport const NotFoundIcon = styled.span`\r\n    display: block;\r\n    text-align: center;\r\n    color: #ffffff;\r\n    font-size: 40px;\r\n    margin-right: 10px;\r\n`;\r\n\r\nexport const NotFoundText = styled.span`\r\ncolor: #ffffff;\r\nfont-size: 17px;\r\n`;","import React from 'react';\r\nimport { faBroom } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    NotFoundWrapper,\r\n    NotFoundIcon,\r\n    NotFoundText\r\n} from './not-found.styles';\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <NotFoundWrapper>\r\n            <NotFoundIcon>\r\n                <FontAwesomeIcon icon={faBroom} />\r\n            </NotFoundIcon>\r\n            <NotFoundText>Sorry, the city was not found ...</NotFoundText>\r\n        </NotFoundWrapper>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import styled from 'styled-components';\nimport device from './responsive/Device';\n\nexport const AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n  ${({ secondary }) =>\n    secondary &&\n    `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n  ${({ showResult }) =>\n    showResult &&\n    `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\n\nexport const WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;","import React from 'react';\nimport SearchCity from './components/search-city/search-city.component';\nimport Result from './components/results/results.component';\nimport NotFound from './components/not-found/not-found.component';\n\nimport {\n  AppTitle,\n  WeatherWrapper\n} from './App.styles'\n\nclass App extends React.Component {\n  state = {\n    value: '',\n    weatherInfo: null,\n    error: false,\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  handleSearchCity = e => {\n    e.preventDefault();\n    const { value } = this.state;\n\n    const weather = `http://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=d24f38f2ee0ecf648441a3886a528eb0`;\n    const forecast = `http://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=d24f38f2ee0ecf648441a3886a528eb0`;\n\n    Promise.all([fetch(weather), fetch(forecast)])\n      .then(([res1, res2]) => {\n        if (res1.ok && res2.ok) {\n          return Promise.all([res1.json(), res2.json()]);\n        }\n        throw Error(res1.statusText, res2.statusText);\n      })\n      .then(([data1, data2]) => {\n        const months = [\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'Nocvember',\n          'December',\n        ];\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const currentDate = new Date();\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n          months[currentDate.getMonth()]\n        }`;\n        const sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\n        const sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\n\n        const weatherInfo = {\n          city: data1.name,\n          country: data1.sys.country,\n          date,\n          description: data1.weather[0].description,\n          main: data1.weather[0].main,\n          temp: data1.main.temp,\n          highestTemp: data1.main.temp_max,\n          lowestTemp: data1.main.temp_min,\n          sunrise,\n          sunset,\n          clouds: data1.clouds.all,\n          humidity: data1.main.humidity,\n          wind: data1.wind.speed,\n          forecast: data2.list,\n        };\n        this.setState({\n          weatherInfo,\n          error: false,\n        });\n      })\n      .catch(error => {\n        console.log(error);\n\n        this.setState({\n          error: true,\n          weatherInfo: null,\n        });\n      });\n  };\n\n  render() {\n    const { value, weatherInfo, error } = this.state;\n    return (\n      <>\n        <AppTitle showLabel={(weatherInfo || error) && true}>Weather app</AppTitle>\n        <WeatherWrapper>\n          <AppTitle secondary showResult={(weatherInfo || error) && true}>\n            Weather app\n          </AppTitle>\n          <SearchCity\n            value={value}\n            showResult={(weatherInfo || error) && true}\n            change={this.handleInputChange}\n            submit={this.handleSearchCity}\n          />\n          {weatherInfo && <Result weather={weatherInfo} />}\n          {error && <NotFound error={error} />}\n        </WeatherWrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('weather-app')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}